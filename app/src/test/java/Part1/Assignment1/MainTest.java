/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Assignment1;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.ArrayList;
import java.util.Arrays;

import org.joda.time.DateTime;
import org.junit.Test;

public class MainTest {
	Student student = new Student("Jack", "1945302", "2001-10-02");
	Lecturer lecturer = new Lecturer("Shucat", "34590", "1999-09-09");
	Module module = new Module("Software Engineering III", "CT401", lecturer);
	Course course = new Course("Computer", "2022-09-05", "2023-05-21");
	
    @Test public void verifyStudentDetails() {
    	
        assertEquals("Jack", student.getName()); //test name
        
        assertNotNull(student.getAge());
       
        assertEquals(DateTime.parse("2001-10-02"), student.getDob());//test dob
        
        assertNotNull(student.getId());
        
        assertNotNull(student.getUsername());
        
        student.addModule(module);//adds modules to test 
        assertEquals(student.getModules(), new ArrayList<Module>(Arrays.asList(module)));
        student.removeModule("CT401");
        assertEquals(student.getModules(), new ArrayList<Module>());
        
        student.addCourse(course);//adds course to test 
        assertEquals(student.getCourses(), new ArrayList<Course>(Arrays.asList(course)));
        student.removeCourse("Computer");
        assertEquals(student.getCourses(), new ArrayList<Course>());
    }
    
    @Test public void verifyLecturerDetails() {
    	
    	assertEquals("Shucat", lecturer.getName());
    	
        assertNotNull(lecturer.getAge());
        
        assertEquals(DateTime.parse("1999-09-09"), lecturer.getDob());
        
        assertNotNull(lecturer.getId());
        
        assertNotNull(lecturer.getUsername());
        
        lecturer.addModule(module);
        assertEquals(lecturer.getModules(), new ArrayList<Module>(Arrays.asList(module)));
        lecturer.removeModule("CT401");
        assertEquals(lecturer.getModules(), new ArrayList<Module>());
    }
    
    @Test public void verifyModuleDetails() {
    	
    	assertEquals("Software Engineering III", module.getName());
    	
    	assertEquals("CT401", module.getId());
    	
    	assertEquals(lecturer, module.getLecturer());
    	
    	module.addStudent(student);
        assertEquals(module.getStudents(), new ArrayList<Student>(Arrays.asList(student)));
        module.removeStudent(student.getId());
        assertEquals(module.getStudents(), new ArrayList<Student>());
    	
        module.addCourse(course);
        assertEquals(module.getCourses(), new ArrayList<Course>(Arrays.asList(course)));
        module.removeCourse("Computer");
        assertEquals(module.getCourses(), new ArrayList<Course>());
    }
    
    @Test public void verifyCourseDetails() {
    	
    	assertEquals("Computer", course.getName());
    	
    	assertEquals(DateTime.parse("2022-09-05"), course.getStartDate());
    	
    	assertEquals(DateTime.parse("2023-05-21"), course.getEndDate());
    	
    	course.addStudent(student);
        assertEquals(course.getStudents(), new ArrayList<Student>(Arrays.asList(student)));
        course.removeStudent(student.getId());
        assertEquals(course.getStudents(), new ArrayList<Student>());
    	
        course.addModule(module);
        assertEquals(course.getModules(), new ArrayList<Module>(Arrays.asList(module)));
        course.removeModule("CT401");
        assertEquals(course.getModules(), new ArrayList<Module>());
    }
    
}
